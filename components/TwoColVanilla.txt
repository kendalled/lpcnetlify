<template>
  <!-- pt-8 for spacing -->
  <form id="payment-wrapper" action="https://formspree.io/mqkylvwz" method="POST" class="px-4 mx-auto max-w-7xl sm:px-6 md:px-8">
    <input type="hidden" name="_next" value="https://lapelpinsandcoins.com/ordered">

    <div class="block">
      <div class="pt-5 pb-0 sm:py-5">
        <div class="border-t border-gray-200" />
      </div>
    </div>

    <div key="stepOne" class="mt-10 sm:mt-0">
      <div class="md:grid md:grid-cols-3 md:gap-6">
        <div class="md:col-span-1">
          <div class="px-4 sm:px-0">
            <h3 class="text-lg font-medium leading-6 text-gray-900">
              {{ stepTitle }}
            </h3>
            <p class="mt-1 text-sm leading-5 text-gray-600">
              {{ stepDesc }}
            </p>
          </div>
        </div>
        <div class="mt-5 md:mt-0 md:col-span-2">
          <div class="shipping-info">
            <!-- was sm:rounded-md -->
            <div class="overflow-hidden rounded-md shadow">
              <div class="px-4 py-5 bg-white sm:p-6">
                <div v-if="status === 0" :key="'stepOne'" class="grid grid-cols-6 gap-6">
                  <div class="col-span-6 sm:col-span-3">
                    <label for="first_name" class="block text-sm font-medium leading-5 text-gray-700">First name
                    </label>
                    <input id="first_name" v-model="fName" type="text" name="First Name" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>

                  <div class="col-span-6 sm:col-span-3">
                    <label for="last_name" class="block text-sm font-medium leading-5 text-gray-700">Last name
                    </label>
                    <input id="last_name" v-model="lName" type="text" name="Last Name" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>

                  <div class="col-span-6 sm:col-span-4">
                    <label for="email" class="block text-sm font-medium leading-5 text-gray-700">Email address
                    </label>
                    <input id="email" v-model="email" type="text" name="Email" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>

                  <div class="col-span-6 sm:col-span-3">
                    <label for="country" class="block text-sm font-medium leading-5 text-gray-700">Country / Region
                    </label>
                    <select id="country" v-model="country" name="Country" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm sm:text-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                      <option>
                        United States
                      </option>
                      <option>
                        Canada
                      </option>
                      <option>
                        Mexico
                      </option>
                    </select>
                  </div>

                  <div class="col-span-6">
                    <label for="street_address" class="block text-sm font-medium leading-5 text-gray-700">Street address
                    </label>
                    <input id="street_address" v-model="add1" type="text" name="Address Line 1" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>

                  <div class="col-span-6 sm:col-span-6 lg:col-span-2">
                    <label for="city" class="block text-sm font-medium leading-5 text-gray-700">City
                    </label>
                    <input id="city" v-model="city" type="text" name="City" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>
                  <div class="col-span-6 lg:col-span-2">
                    <label for="state" class="block text-sm font-medium leading-5 text-gray-700">State / Province</label>
                    <select id="state" v-model="shipState" required class="block w-full mt-1 border-gray-300 rounded-md shadow-sm sm:text-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" name="state">
                      <option value="Select a State">
                        Select a State
                      </option>
                      <option value="AL">
                        Alabama
                      </option>
                      <option value="AK">
                        Alaska
                      </option>
                      <option value="AZ">
                        Arizona
                      </option>
                      <option value="AR">
                        Arkansas
                      </option>
                      <option value="CA">
                        California
                      </option>
                      <option value="CO">
                        Colorado
                      </option>
                      <option value="CT">
                        Connecticut
                      </option>
                      <option value="DE">
                        Delaware
                      </option>
                      <option value="DC">
                        District Of Columbia
                      </option>
                      <option value="FL">
                        Florida
                      </option>
                      <option value="GA">
                        Georgia
                      </option>
                      <option value="HI">
                        Hawaii
                      </option>
                      <option value="ID">
                        Idaho
                      </option>
                      <option value="IL">
                        Illinois
                      </option>
                      <option value="IN">
                        Indiana
                      </option>
                      <option value="IA">
                        Iowa
                      </option>
                      <option value="KS">
                        Kansas
                      </option>
                      <option value="KY">
                        Kentucky
                      </option>
                      <option value="LA">
                        Louisiana
                      </option>
                      <option value="ME">
                        Maine
                      </option>
                      <option value="MD">
                        Maryland
                      </option>
                      <option value="MA">
                        Massachusetts
                      </option>
                      <option value="MI">
                        Michigan
                      </option>
                      <option value="MN">
                        Minnesota
                      </option>
                      <option value="MS">
                        Mississippi
                      </option>
                      <option value="MO">
                        Missouri
                      </option>
                      <option value="MT">
                        Montana
                      </option>
                      <option value="NE">
                        Nebraska
                      </option>
                      <option value="NV">
                        Nevada
                      </option>
                      <option value="NH">
                        New Hampshire
                      </option>
                      <option value="NJ">
                        New Jersey
                      </option>
                      <option value="NM">
                        New Mexico
                      </option>
                      <option value="NY">
                        New York
                      </option>
                      <option value="NC">
                        North Carolina
                      </option>
                      <option value="ND">
                        North Dakota
                      </option>
                      <option value="OH">
                        Ohio
                      </option>
                      <option value="OK">
                        Oklahoma
                      </option>
                      <option value="OR">
                        Oregon
                      </option>
                      <option value="PA">
                        Pennsylvania
                      </option>
                      <option value="RI">
                        Rhode Island
                      </option>
                      <option value="SC">
                        South Carolina
                      </option>
                      <option value="SD">
                        South Dakota
                      </option>
                      <option value="TN">
                        Tennessee
                      </option>
                      <option value="TX">
                        Texas
                      </option>
                      <option value="UT">
                        Utah
                      </option>
                      <option value="VT">
                        Vermont
                      </option>
                      <option value="VA">
                        Virginia
                      </option>
                      <option value="WA">
                        Washington
                      </option>
                      <option value="WV">
                        West Virginia
                      </option>
                      <option value="WI">
                        Wisconsin
                      </option>
                      <option value="WY">
                        Wyoming
                      </option>
                    </select>
                  </div>

                  <div class="col-span-6 sm:col-span-3 lg:col-span-2">
                    <label for="postal_code" class="block text-sm font-medium leading-5 text-gray-700">ZIP / Postal
                    </label>
                    <input id="postal_code" v-model="zip" type="text" name="ZIP" class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                  </div>
                </div>
                <span v-if="status === 1" :key="'stepFour'">
                  <p class="inline-block mb-2 text-base font-medium leading-6 text-gray-900">
                    Payment Details
                  </p>
                  <div>
                    <PaymentElement v-if="isStripeLoaded" @question="emitError" @token="tokenHandler" />
                  </div>
                </span>
                <br v-if="status === 1" :key="'stepThree'">
                <span v-if="status === 1" :key="'stepTwo'">
                  <p class="inline-block text-base font-medium leading-6 text-gray-900">
                    Order Details
                  </p>
                  <div class="grid grid-cols-1 mt-2 gap-y-6 gap-x-4 sm:grid-cols-6">

                    <div class="sm:col-span-3">
                      <label for="proof" class="block text-sm font-medium leading-5 text-gray-700">
                        Proof number
                      </label>
                      <div class="mt-1 rounded-md shadow-sm">
                        <input id="proof" type="text" name="proof" placeholder="Proof #3" class="block w-full border-gray-300 rounded-md shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm">
                      </div>
                    </div>

                    <div class="sm:col-span-3">
                      <label for="price" class="block text-sm font-medium leading-5 text-gray-700">Order total (include cents)</label>
                      <div class="relative mt-1 rounded-md shadow-sm">
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                          <span class="text-gray-500 sm:text-sm sm:leading-5">
                            $
                          </span>
                        </div>
                        <input
                          id="price"
                          v-model="price"
                          type="text"
                          name="Price"
                          pattern="(\d+\.\d{1,2})"
                          class="block w-full pr-12 mt-1 border-gray-300 rounded-md shadow-sm pl-7 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm"
                          placeholder="0.00"
                          aria-describedby="price-currency"
                        >
                        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                          <span id="price-currency" class="text-gray-500 sm:text-sm sm:leading-5">
                            USD
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </span>
              </div>
              <div class="px-4 py-3 text-right bg-gray-50 sm:px-6">
                <span v-if="status === 1 && token && !checkoutAttempt" class="inline-flex rounded-md shadow-sm">
                  <button type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium leading-5 text-white transition duration-150 ease-in-out bg-blue-600 border border-transparent rounded-md hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:ring focus:ring-blue-200 focus:ring-opacity-50 active:bg-blue-700" @click.prevent="checkoutHandler">
                    Checkout
                  </button>
                </span>
                <button v-if="status === 1 && !token" class="px-4 py-2 ml-2 text-sm font-medium text-gray-700 transition duration-150 ease-in-out bg-gray-200 border border-transparent rounded-md focus:ring focus:ring-gray-200 focus:ring-opacity-50 hover:bg-gray-100 active:bg-gray-200 focus:outline-none" @click.prevent="emitError">
                  Checkout
                </button>
                <span v-if="(status === 1 && checkoutAttempt) || (status === 0 && continued)" class="inline-flex rounded-md shadow-sm">
                  <button type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium leading-5 text-white transition duration-150 ease-in-out bg-blue-600 border border-transparent rounded-md hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:ring focus:ring-blue-200 focus:ring-opacity-50 active:bg-blue-700" disabled>
                    <svg class="w-5 h-5 mr-3 -ml-1 text-white animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle
                        class="opacity-25"
                        cx="12"
                        cy="12"
                        r="10"
                        stroke="currentColor"
                        stroke-width="4"
                      />
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" />
                    </svg>
                    Loading
                  </button>
                </span>
                <span v-if="status === 0 && !continued" class="inline-flex rounded-md shadow-sm">
                  <button type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium leading-5 text-white transition duration-150 ease-in-out bg-blue-600 border border-transparent rounded-md hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:ring focus:ring-blue-200 focus:ring-opacity-50 active:bg-blue-700" @click="continueHandler">
                    Continue
                  </button>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </form>
</template>

<script>
import PaymentElement from '~/components/PaymentElement'
import { fireDb } from '~/plugins/firebase'
export default {
  name: 'TwoColVanilla',
  components: {
    PaymentElement
  },
  props: {
    parentStep: {
      type: Number,
      default: 0
    }
  },
  data () {
    return {
      headings: [
        {
          title: 'Shipping Information',
          desc: 'Use a permanent address where you can receive mail.'
        },
        {
          title: 'Billing Information',
          desc: 'We accept all major credit & debit cards.'
        }
      ],
      isStripeLoaded: false,
      price: null,
      status: 0,
      checkoutAttempt: false,
      continued: false,
      checkedOut: false,
      token: false,
      add1: '',
      shipState: 'Select a State',
      city: '',
      zip: '',
      fName: '',
      lName: '',
      email: '',
      country: 'United States',
      states: [
        'Select State', 'Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Minor Outlying Islands', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'U.S. Virgin Islands', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'
      ]
    }
  },
  computed: {
    stepTitle () {
      return this.headings[this.status].title
    },
    stepDesc () {
      return this.headings[this.status].desc
    },
    user () {
      return this.$store.state.user
    },
    priceCharge () {
      const cleaned = this.price.replace(',', '')
      const cost = parseFloat(cleaned) * 100
      const chargePrice = parseInt(cost)
      return chargePrice
    }
  },
  watch: {
    checkedOut (newVal) {
      if (newVal) {
        this.submitForm()
      }
    },
    status (newVal, oldVal) {
      if (newVal === 0) {
        this.continued = false
      }
      this.$emit('status', newVal)
    },
    parentStep (newVal) {
      if (this.status !== newVal) {
        this.status = newVal
      }
    }
  },
  methods: {
    emitError () {
      // maybe focus save button?
      this.$emit('error')
    },
    tokenHandler () {
      console.log('i see da token')
      setTimeout(() => {
        this.token = true
      }, 1500)
    },
    submitForm () {
      const form = document.getElementById('payment-wrapper')
      form.submit()
    },
    continueHandler () {
      this.continued = true
      const uid = this.user.id
      // Get user data from form fields
      const state = this.shipState
      const city = this.city
      const zip = this.zip
      // Concatenates name fields
      const name = this.fName + (this.lName !== '' ? ' ' + this.lName : '')
      const email = this.email
      const line1 = this.add1
      fireDb.collection('stripe_customers').doc(uid).collection('details').add({
        name,
        line1,
        city,
        state,
        email,
        zipCode: zip
      }).then(() => {
        console.log('Details created in firestore.')
        this.status = 1
      })
    },
    checkoutHandler (event) {
      this.checkoutAttempt = true
      const price = this.priceCharge
      const uid = this.user.id
      fireDb.collection('stripe_customers').doc(uid).collection('charges').add({
        amount: price,
        desc: 'Lapel Pins & Coins - ' + uid
      }).then(() => {
        this.checkedOut = true
        // this.$router.push('/ordered')
      })
    }
  },
  head () {
    return {
      script: [
        { once: true, skip: this.isStripeLoaded, type: 'text/javascript', src: 'https://js.stripe.com/v3/', hid: 'stripe', defer: true, callback: () => { this.isStripeLoaded = true } }
      ]
    }
  }
}
</script>

<style scoped>
#price:invalid {
  @apply border-red-500;
}
</style>
